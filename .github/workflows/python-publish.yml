# This workflow will upload Python Packages to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [capital_com_mcp_server]  # Add more packages here as you create them

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build release distributions
        run: |
          cd src/${{ matrix.package }}
          python -m build
          mkdir -p ../../dist/${{ matrix.package }}
          cp dist/* ../../dist/${{ matrix.package }}/

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists-${{ matrix.package }}
          path: dist/${{ matrix.package }}/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    strategy:
      matrix:
        package: [capital_com_mcp_server]  # Add more packages here as you create them
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      url: https://pypi.org/p/${{ matrix.package }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists-${{ matrix.package }}
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
